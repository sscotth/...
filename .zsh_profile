load_mathiasbynens_zsh_dotfiles () {
  local file;

  for file in $HOME/.dotfiles/math_dotfiles/.{path,zsh_prompt,exports,aliases,functions,extra}; do
    [ -r $file ] && [ -f $file ] && source $file;
  done;
}

load_own_zsh_dotfiles () {
  local file;

  for file in $HOME/.{path,zsh_prompt,exports,aliases,functions,extra}; do
    [ -r $file ] && [ -f $file ] && source $file;
  done;
}

load_mathiasbynens_zsh_dotfiles

# ZSH NUMPAD now working
# http://superuser.com/questions/742171/zsh-z-shell-numpad-numlock-doesnt-work
# https://github.com/robbyrussell/oh-my-zsh/issues/2654#issuecomment-43887580
# To get code press ^v release and press KEY
bindkey -s "^[Op" "0"
bindkey -s "^[On" "."
bindkey -s "^[OM" "^M"
bindkey -s "^[Oq" "1"
bindkey -s "^[Or" "2"
bindkey -s "^[Os" "3"
bindkey -s "^[Ot" "4"
bindkey -s "^[Ou" "5"
bindkey -s "^[Ov" "6"
bindkey -s "^[Ow" "7"
bindkey -s "^[Ox" "8"
bindkey -s "^[Oy" "9"
bindkey -s "^[Ok" "+"
bindkey -s "^[Om" "-"
bindkey -s "^[Oj" "*"
bindkey -s "^[Oo" "/"
bindkey -s "^[OX" "="

# Set input to vi mode
set -o vi

# Load nix
# if [ -e ~/.nix-profile/etc/profile.d/nix.sh ]; then
#   . ~/.nix-profile/etc/profile.d/nix.sh;
# fi

# Lazily load Node.js and nvm
# https://github.com/creationix/nvm/issues/730
# https://www.reddit.com/r/node/comments/4tg5jg/lazy_load_nvm_for_faster_shell_start/
lazily_load_nvm_and_nodejs () {
  local -a NODE_GLOBALS=(`find ~/.nvm/versions/node -maxdepth 3 -type l -wholename '*/bin/*' | xargs -n1 basename | sort | uniq`)

  NODE_GLOBALS+=("node")
  NODE_GLOBALS+=("nvm")

  load_nvm() {
    export NVM_DIR=~/.nvm
    local NVM_PATH=$(brew --prefix nvm)/nvm.sh
    [ -s $NVM_PATH ] && . $NVM_PATH
  }

  for cmd in "${NODE_GLOBALS[@]}"; do
    eval "${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \$@ }"
  done
}

lazily_load_nvm_and_nodejs

# Switch node-version when directory changes
# https://github.com/creationix/nvm/issues/603#issuecomment-91290448
function chpwd() {
  if [ -r $PWD/.node-version ]; then
    nvm use `cat $PWD/.node-version`
  elif [ -r $PWD/.nvmrc ]; then
    nvm use
  fi
}
chpwd

# load chruby
# auto-switch the current version of Ruby when you cd between your different projects
# https://github.com/postmodern/chruby#auto-switching
if [ -f /usr/local/share/chruby/chruby.sh ]; then
  source /usr/local/share/chruby/chruby.sh
fi
if [ -f /usr/local/share/chruby/auto.sh ]; then
  source /usr/local/share/chruby/auto.sh
fi

# iTerm2 v3 Shell Integration
# https://iterm2.com/shell_integration.html
test -e ${HOME}/.iterm2_shell_integration.zsh && source ${HOME}/.iterm2_shell_integration.zsh

# Syntax Highlighting
if [ -f ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# History completion
if [ -f ~/.oh-my-zsh/plugins/history-substring-search/history-substring-search.zsh ]; then
  source ~/.oh-my-zsh/plugins/history-substring-search/history-substring-search.zsh
fi

zmodload zsh/terminfo
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

# [z - jump around](https://github.com/rupa/z)
if [ -f `brew --prefix`/etc/profile.d/z.sh ]; then
  . `brew --prefix`/etc/profile.d/z.sh
fi

# # Case-insensitive globbing (used in pathname expansion)
# shopt -s nocaseglob;
#
# # Append to the Bash history file, rather than overwriting it
# shopt -s histappend;
#
# # Autocorrect typos in path names when using `cd`
# shopt -s cdspell;

# # Enable some Bash 4 features when possible:
# # * `autocd`, e.g. `**/qux` will enter `./foo/bar/baz/qux`
# # * Recursive globbing, e.g. `echo **/*.txt`
# for option in autocd globstar; do
# 	shopt -s "$option" 2> /dev/null;
# done;

# # Enable tab completion for `g` by marking it as an alias for `git`
# if type _git &> /dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
# 	complete -o default -o nospace -F _git g;
# fi;
#
# # Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
# [ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;
#
# # Add tab completion for `defaults read|write NSGlobalDomain`
# # You could just use `-g` instead, but I like being explicit
# complete -W "NSGlobalDomain" defaults;
#
# # Add `killall` tab completion for common apps
# complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall;


load_own_zsh_dotfiles
