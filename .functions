command_exists () {
  type "$1" &> /dev/null;
}

function md () {
  mkdir -p $1 && cd $1;
}

# Start an HTTP server from a directory, optionally specifying the port
function server() {
  local CHROME="/opt/homebrew-cask/Caskroom/google-chrome-canary/latest/Google\ Chrome\ Canary.app"
  # local CHROME="/opt/homebrew-cask/Caskroom/google-chrome-canary/latest/Google\ Chrome\ Canary.app/Contents/MacOS/Google\ Chrome\ Canary"

  if type hs > /dev/null; then
    if [ $1 ] && [ $1 -gt 1 ] && [ $1 -lt 1023 ]; then
      sudo hs -a localhost -p $1 -o ${CHROME}
    elif [ $1 ] && [ $1 -lt 65536 ]; then
      hs -a localhost -p $1 -o ${CHROME}
    else
      hs -a localhost -p $((RANDOM + 10000)) -o ${CHROME}
    fi
  else
    echo "run \`npm install http-server -g\` or use python -m SimpleHTTPServer"
  fi
}

function ssid () {
  /System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk '/ SSID/ {print substr($0, index($0, $2))}'
}

function restart_network () {
  sudo ifconfig en0 down && flush_dns_cache && sudo ifconfig en0 up
}

function network_restart () {
  restart_network
}

function flush_dns_cache () {
  sudo killall -HUP mDNSResponder
  sudo killall mDNSResponderHelper
  sudo dscacheutil -flushcache

  sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist
  sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist
}
